// Lec-10

polymorphism in java.

poly.java (static polymorphism- overloading).

//polymorphism
//an ability of an object to take many forms.
//static / dynamic
// static: overloading( function)
//dynamic: overriding(function)
public class Poly {

//Function Overloading : defining multiple functions with same name  //with different parameters.
// add is existing in multiple forms (using parameters).
void add(int num1,int num2){System.out.println(num1+ num2); }
void add(int num1,int nun2,int num3){System.out.println(num1+ num2+num3); }
void add(float num1,noat num2){System.out.println(num1+ num2); }
void add(int num1,float num2){System.out.println(num1+ num2); }
void add(float num1,int num2){System.out.println(num1+ num2); }
public static void main(String [] args)
{
// rules
// 16/18 : no of parameters must be different.
// 16 / 20 : no Of Parameters are same but it is valid because type is different.
// 22/ 24 : no of parameters are sane and type are also almost same. its sequence/order of datatype.

Poly pol= new Poly();
pol/add(12.5f, 25);
}
}


program.java (dynamic polymorphism- overriding).

abstract class Doctor
{
abstract void treatpatient( ) ;
}
class Physician extends Doctor
{
@Override
void treatPatient() {
System.out.println("I Physician Treat Patients using Medicines." ) ;
}
class Surgeon extends Doctor
{
@Override
void treatPatient() {
System.out.println("I am Surgeon and i Treat Patients using Surgery!");
}
class Dentist extends Doctor
{
@Override
void treatPatient() {
System.out.println("I an Dentist inl Treat Patients Teeth");
}
}

class program
{
public static void main(String[] args)
{
System.out.println("I Lucy! Receptioninst at Max Care");
System.out.println(" who you are looking for");
System.out.println("1. Physician\n2. Surgeon \n3. Dentist");
int choice = new java.util.Scanner(System.in).nextInt();
Doctor doc=null ;

// polymorphism is the ability/ implementation of Base class Object
// i.e Doctor's doc to get initialized/change form using any of the
//derived class i.e physician/ surgeon/dentist.
switch(choice) {
case I:
doc =new Physician();
break;
case 2:
doc =new Surgeon();
break;
case 3:
doc =new Dentist();
break;
default:
System.out.println("Oh! Invalid Choice");
break;
}
if(choice<0 || choice>3)
{
System.exit(0);
}
else
{
doc.treatPatient();
}
}


task1.java
/*
Create a class name as Addition. Create three methods of the same
name as sum. First method will accept 2 arguments, the second
method will accept 3 arguments and the third method will accept 2
arguments of different data types. Perform method overloading and try
to access the respective method using objects.
*/

class Addition {
    
    
    public int sum(int a, int b) {
        return a + b;
    }

        public int sum(int a, int b, int c) {
        return a + b + c;
    }

    
    public double sum(int a, double b) {
        return a + b;
    }

    public static void main(String[] args) {
        
        Addition addition = new Addition();

        
        int result1 = addition.sum(5, 10);         
        int result2 = addition.sum(1, 2, 3); method
        double result3 = addition.sum(4, 5.5); 
        
        System.out.println("Sum of 5 and 10 is: " + result1);
        System.out.println("Sum of 1, 2, and 3 is: " + result2);
        System.out.println("Sum of 4 and 5.5 is: " + result3);
    }
}


task2.java

/*
Create 3 private variables named Standard, RotlNo,and Section. Try
to set the values of variables and access it using getter and setter. provide simple code in java
*/

class Student {
    
    private int Standard;
    private int RollNo;
    private String Section;

    
    public int getStandard() {
        return Standard;
    }

    
    public void setStandard(int standard) {
        this.Standard = standard;
    }

    
    public int getRollNo() {
        return RollNo;
    }

    
    public void setRollNo(int rollNo) {
        this.RollNo = rollNo;
    }

    
    public String getSection() {
        return Section;
    }

    
    public void setSection(String section) {
        this.Section = section;
    }

    public static void main(String[] args) {
        
        Student student = new Student();

        
        student.setStandard(10);
        student.setRollNo(25);
        student.setSection("A");

        
        int standard = student.getStandard();
        int rollNo = student.getRollNo();
        String section = student.getSection();

        
        System.out.println("Standard: " + standard);
        System.out.println("Roll No: " + rollNo);
        System.out.println("Section: " + section);
    }
}

